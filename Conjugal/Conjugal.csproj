<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.1;net6</TargetFrameworks>
        <LangVersion>latest</LangVersion>
        <AssemblyName>FowlFever.Conjugal</AssemblyName>
        <RootNamespace>FowlFever.Conjugal</RootNamespace>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageVersion>3.0.0</PackageVersion>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <Title>Conjugal</Title>
        <Authors>Brandon Cimino</Authors>
        <RepositoryUrl>https://github.com/brandoncimino/Conjugal</RepositoryUrl>
        <Company>FowlFever</Company>
        <Product>Conjugal</Product>
        <RepositoryType>git</RepositoryType>
        <Description>Structs and annotations for producing nice word conjugations and other linguistic metadata, such as abbreviations, units of measure, and terms of venery.</Description>
        <PackageReleaseNotes>
            ### Added

            #### Fancy Interfaces!

            - A set of `I{affix}` interfaces that map to `AffixFlavors` _(`ISuffix`, `IPrefix`, etc.)_
            - `IAffix&lt;TFlavor&gt;` interface, where `TFlavor` is one of the `I{affix}` interfaces

            #### `Affix&lt;TFlavor&gt;` structs!

            - `Affix&lt;TFlavor&gt;`, a `struct` implementation of the new `IAffix&lt;TFlavor&gt;` interface
            - `AffixRef&lt;TFlavor&gt;`, a `ref struct` equivalent of `Affix&lt;TFlavor&gt;`

            #### Baby-Baby Duplifixation!

            - Added the most basic implementation of `Duplifix`ing _(it just doubles the word - no support yet for transformative reduplication)_

            ### Changed

            #### `Affixation` is now a `ref struct`!
            - `string` properties are now `ReadOnlySpan&lt;char&gt;`s
            - `string.{affix}()` extension methods now return `Affixation` instances _(which can be implicitly cast into `string`s)_
            - Removed `string.{affix}ation()` extension methods _(since they're now redundant with the `string.{affix}()` methods)_
            - `string` parameters in `string.{affix}()` extension methods are now `ReadOnlySpan&lt;char&gt;`s
            - Added `ReadOnlySpan&lt;char&gt;.{affix}()` extension methods to match the `string`-extending versions
            - `Affixation.InsertionPoint` from `private` -> `public`
            - `Affixation` `init`ters from `public` -> `internal`

            ### Fixed
            - `Joiner`s should never be left dangling; i.e. if the `Stem` or `BoundMorpheme` are blank, there should be no `Joiner`
        </PackageReleaseNotes>
        <NeutralLanguage>en</NeutralLanguage>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Humanizer.Core" Version="2.14.1"/>
        <PackageReference Include="IndexRange" Version="1.0.2"/>
        <PackageReference Include="IsExternalInit" Version="1.0.3">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="JetBrains.Annotations" Version="2022.1.0"/>
        <PackageReference Include="StringTokenFormatter" Version="4.1.0"/>
    </ItemGroup>

</Project>
